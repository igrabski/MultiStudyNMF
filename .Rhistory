out$E[[1]][[2]] <- 0
str(out)
proportion_A(out)
proportion_A
str(out)
#' This populates each entry of the A matrix by the proportion of samples in that study
#' with relative exposures above a specified threshold.
#'
#' @param out Output of sampler.
#' @param thresh Threshold for relative exposures; default 0.05.
#' @param label Whether the A matrix should be annotated by its closest match to
#' COSMIC v3.2; default TRUE.
#' @return The A matrix, where each entry indicates the proportion of samples in that study
#' with relative exposures above `thresh`.
#' @export
proportion_A <- function(out,thresh=0.05,label=T) {
if (label) {
if (is.list(out$A)) {
if (length(out$A[[1]])>1) {
A <- label_A(cbind(out$A[[1]],out$A[[2]]),cbind(out$P[[1]],out$P[[2]]))
P <- cbind(out$P[[1]],out$P[[2]])
} else {
A <- label_A(out$A[[2]],out$P[[2]])
P <- out$P[[2]]
}
} else {
A <- label_A(out$A,out$P)
}
} else {
if (is.list(out$A)) {
if (length(out$A[[1]])>1) {
A <- cbind(out$A[[1]],out$A[[2]])
P <- cbind(out$P[[1]],out$P[[2]])
} else {
A <- out$A[[2]]
P <- out$P[[2]]
}
} else {
A <- out$A
}
}
for (s in 1:nrow(A)) {
if (is.list(out$A)) {
if (length(out$E[[1]][[s]])>1) {
E <- rbind(out$E[[1]][[s]],out$E[[2]][[s]])
E <- sweep(E,1,colSums(P[,A[s,]==1]),'*')
E <- sweep(E,2,colSums(E),'/')
A[s,which(A[s,]==1)] <- rowSums(E>thresh)/ncol(E)
} else {
E <- sweep(out$E[[2]][[s]],1,colSums(P[,A[s,]==1]),'*')
E <- sweep(E,2,colSums(E),'/')
A[s,which(A[s,]==1)] <- rowSums(E>thresh)/ncol(E)
}
} else {
E <- sweep(out$E[[s]],1,colSums(out$P[,A[s,]==1]),'*')
E <- sweep(E,2,colSums(E),'/')
A[s,which(A[s,]==1)] <- rowSums(E>thresh)/ncol(E)
}
}
return(A)
}
proportion_A(out)
thresh <- 0.05
label <- T
if (label) {
if (is.list(out$A)) {
if (length(out$A[[1]])>1) {
A <- label_A(cbind(out$A[[1]],out$A[[2]]),cbind(out$P[[1]],out$P[[2]]))
P <- cbind(out$P[[1]],out$P[[2]])
} else {
A <- label_A(out$A[[2]],out$P[[2]])
P <- out$P[[2]]
}
} else {
A <- label_A(out$A,out$P)
}
} else {
if (is.list(out$A)) {
if (length(out$A[[1]])>1) {
A <- cbind(out$A[[1]],out$A[[2]])
P <- cbind(out$P[[1]],out$P[[2]])
} else {
A <- out$A[[2]]
P <- out$P[[2]]
}
} else {
A <- out$A
}
}
A
out$A
out$A[[1]][1,3] <- 1
proportion_A(out)
if (label) {
if (is.list(out$A)) {
if (length(out$A[[1]])>1) {
A <- label_A(cbind(out$A[[1]],out$A[[2]]),cbind(out$P[[1]],out$P[[2]]))
P <- cbind(out$P[[1]],out$P[[2]])
} else {
A <- label_A(out$A[[2]],out$P[[2]])
P <- out$P[[2]]
}
} else {
A <- label_A(out$A,out$P)
}
} else {
if (is.list(out$A)) {
if (length(out$A[[1]])>1) {
A <- cbind(out$A[[1]],out$A[[2]])
P <- cbind(out$P[[1]],out$P[[2]])
} else {
A <- out$A[[2]]
P <- out$P[[2]]
}
} else {
A <- out$A
}
}
A
s <- 1
length(out$E[[1]][[s]])>1
E <- rbind(out$E[[1]][[s]],out$E[[2]][[s]])
dim(E)
E <- sweep(E,1,colSums(P[,A[s,]==1]),'*')
dim(P)
sum(A[1,])
A
data <- read.csv('../../../Downloads/WGS_PCAWG_2018_02_09/WGS_PCAWG.96.csv')
data(cosmic)
rownames(data) <- paste0(substr(data$Trinucleotide,0,1),'[',
data$Mutation.type,']',
substr(data$Trinucleotide,3,3))
data <- data[cosmic$Type,]
other <- read.csv('../../../Downloads/WGS_Other_2018_04_13/WGS_Other.96.csv')
rownames(other) <- paste0(substr(other$Trinucleotide,0,1),'[',
other$Mutation.type,']',
substr(other$Trinucleotide,3,3))
other <- other[cosmic$Type,]
# Subset to the two cancers of interest
cancer_id <- substr(colnames(data),0,10)
names(cancer_id) <- colnames(data)
cancer_id2 <- substr(colnames(other),0,10)
names(cancer_id2) <- colnames(other)
data <- data[,cancer_id%in%c('Lymph.BNHL','Lymph.CLL.')]
cancer_id <- cancer_id[colnames(data)]
other <- other[,cancer_id2%in%c('Lymph.BNHL','Lymph.CLL.')]
cancer_id2 <- cancer_id2[colnames(other)]
set.seed(31623)
subsamp1 <- sample(1:ncol(data),40,replace=F)
data <- data[,subsamp1]
cancer_id <- cancer_id[subsamp1]
names(cancer_id) <- NULL
subsamp2 <- sample(which(cancer_id2=='Lymph.CLL.'),30,replace=F)
other <- other[,c(which(cancer_id2=='Lymph.BNHL'),subsamp2)]
cancer_id2 <- cancer_id2[c(which(cancer_id2=='Lymph.BNHL'),subsamp2)]
names(cancer_id2) <- NULL
# Set up final data and covariates input
cancer_id <- ifelse(cancer_id=='Lymph.CLL.',1,0)
cancer_id2 <- ifelse(cancer_id2=='Lymph.CLL.',1,0)
M <- list(as.matrix(data),
as.matrix(other))
cov <- list(as.matrix(rbind(cancer_id,rnorm(ncol(data)))),
as.matrix(rbind(cancer_id2,rnorm(ncol(other)))))
?discovery_cov_fit
set.seed(62524)
out <- discovery_cov_fit(M,cov)
data <- read.csv('../../../Downloads/WGS_PCAWG_2018_02_09/WGS_PCAWG.96.csv')
data(cosmic)
rownames(data) <- paste0(substr(data$Trinucleotide,0,1),'[',
data$Mutation.type,']',
substr(data$Trinucleotide,3,3))
data <- data[cosmic$Type,]
other <- read.csv('../../../Downloads/WGS_Other_2018_04_13/WGS_Other.96.csv')
rownames(other) <- paste0(substr(other$Trinucleotide,0,1),'[',
other$Mutation.type,']',
substr(other$Trinucleotide,3,3))
other <- other[cosmic$Type,]
# Subset to the two cancers of interest
cancer_id <- substr(colnames(data),0,10)
names(cancer_id) <- colnames(data)
cancer_id2 <- substr(colnames(other),0,10)
names(cancer_id2) <- colnames(other)
data <- data[,cancer_id%in%c('Lymph.BNHL','Lymph.CLL.')]
cancer_id <- cancer_id[colnames(data)]
other <- other[,cancer_id2%in%c('Lymph.BNHL','Lymph.CLL.')]
cancer_id2 <- cancer_id2[colnames(other)]
# Set up final data and covariates input
cancer_id <- ifelse(cancer_id=='Lymph.CLL.',1,0)
cancer_id2 <- ifelse(cancer_id2=='Lymph.CLL.',1,0)
M <- list(as.matrix(data),
as.matrix(other))
cov <- list(as.matrix(rbind(cancer_id,rnorm(ncol(data)))),
as.matrix(rbind(cancer_id2,rnorm(ncol(other)))))
str(M)
str(cov)
data <- read.csv('../../../Downloads/WGS_PCAWG_2018_02_09/WGS_PCAWG.96.csv')
data(cosmic)
rownames(data) <- paste0(substr(data$Trinucleotide,0,1),'[',
data$Mutation.type,']',
substr(data$Trinucleotide,3,3))
data <- data[cosmic$Type,]
other <- read.csv('../../../Downloads/WGS_Other_2018_04_13/WGS_Other.96.csv')
rownames(other) <- paste0(substr(other$Trinucleotide,0,1),'[',
other$Mutation.type,']',
substr(other$Trinucleotide,3,3))
other <- other[cosmic$Type,]
# Subset to the two cancers of interest
cancer_id <- substr(colnames(data),0,10)
names(cancer_id) <- colnames(data)
cancer_id2 <- substr(colnames(other),0,10)
names(cancer_id2) <- colnames(other)
data <- data[,cancer_id%in%c('Lymph.BNHL','Lymph.CLL.')]
cancer_id <- cancer_id[colnames(data)]
other <- other[,cancer_id2%in%c('Lymph.BNHL','Lymph.CLL.')]
cancer_id2 <- cancer_id2[colnames(other)]
# For the purposes of the vignette, randomly subsample both to a smaller size
set.seed(31623)
subsamp1 <- sample(1:ncol(data),40,replace=F)
data <- data[,subsamp1]
cancer_id <- cancer_id[subsamp1]
names(cancer_id) <- NULL
subsamp2 <- sample(which(cancer_id2=='Lymph.CLL.'),30,replace=F)
other <- other[,c(which(cancer_id2=='Lymph.BNHL'),subsamp2)]
cancer_id2 <- cancer_id2[c(which(cancer_id2=='Lymph.BNHL'),subsamp2)]
names(cancer_id2) <- NULL
# Set up final data and covariates input
cancer_id <- ifelse(cancer_id=='Lymph.CLL.',1,0)
cancer_id2 <- ifelse(cancer_id2=='Lymph.CLL.',1,0)
M <- list(as.matrix(data),
as.matrix(other))
cov <- list(as.matrix(rbind(cancer_id,rnorm(ncol(data)))),
as.matrix(rbind(cancer_id2,rnorm(ncol(other)))))
set.seed(62524)
out <- discovery_cov_fit(M,cov)
str(out)
label_A(out$A,out$P)
proportion_A(out,thresh=0.05,label=T)
out$indics[[1]]
indic1 <- out$indics[[1]]
colnames(indic1) <- colnames(A)[A[1,]==1]
A <- label_A(out$A,out$P)
A
indic1 <- out$indics[[1]]
colnames(indic1) <- colnames(A)[A[1,]==1]
indic1
indic2 <- out$indics[[2]]
colnames(indic2) <- colnames(A)[A[2,]==1]
indic2
out$coefs[[1]]
out$coefs[[2]]
library(MultiStudyNMF)
set.seed(62524)
out <- recovery_discovery_cov_fit(M,cov)
data <- read.csv('../../../Downloads/WGS_PCAWG_2018_02_09/WGS_PCAWG.96.csv')
data(cosmic)
rownames(data) <- paste0(substr(data$Trinucleotide,0,1),'[',
data$Mutation.type,']',
substr(data$Trinucleotide,3,3))
data <- data[cosmic$Type,]
# Subset to the two cancers of interest
M <- list(as.matrix(data[,substr(colnames(data),0,10)=='Lung.Adeno']),
as.matrix(data[,substr(colnames(data),0,10)=='Lung.SCC..']))
set.seed(62524)
out2 <- discovery_fit(M)
str(out)
label_A(out$A$discovery,out$P$discovery)
label_A(out$A$recovery,out$P$recovery)
proportion_A(out)
out$indics$recovery
out$coefs$recovery
str(out2)
str(M)
lung <- list(M=M)
str(lung)
data <- read.csv('../../../Downloads/WGS_PCAWG_2018_02_09/WGS_PCAWG.96.csv')
data(cosmic)
rownames(data) <- paste0(substr(data$Trinucleotide,0,1),'[',
data$Mutation.type,']',
substr(data$Trinucleotide,3,3))
data <- data[cosmic$Type,]
other <- read.csv('../../../Downloads/WGS_Other_2018_04_13/WGS_Other.96.csv')
rownames(other) <- paste0(substr(other$Trinucleotide,0,1),'[',
other$Mutation.type,']',
substr(other$Trinucleotide,3,3))
other <- other[cosmic$Type,]
# Subset to the two cancers of interest
cancer_id <- substr(colnames(data),0,10)
names(cancer_id) <- colnames(data)
cancer_id2 <- substr(colnames(other),0,10)
names(cancer_id2) <- colnames(other)
data <- data[,cancer_id%in%c('Lymph.BNHL','Lymph.CLL.')]
cancer_id <- cancer_id[colnames(data)]
other <- other[,cancer_id2%in%c('Lymph.BNHL','Lymph.CLL.')]
cancer_id2 <- cancer_id2[colnames(other)]
# For the purposes of the vignette, randomly subsample both to a smaller size
set.seed(31623)
subsamp1 <- sample(1:ncol(data),40,replace=F)
data <- data[,subsamp1]
cancer_id <- cancer_id[subsamp1]
names(cancer_id) <- NULL
subsamp2 <- sample(which(cancer_id2=='Lymph.CLL.'),30,replace=F)
other <- other[,c(which(cancer_id2=='Lymph.BNHL'),subsamp2)]
cancer_id2 <- cancer_id2[c(which(cancer_id2=='Lymph.BNHL'),subsamp2)]
names(cancer_id2) <- NULL
# Set up final data and covariates input
cancer_id <- ifelse(cancer_id=='Lymph.CLL.',1,0)
cancer_id2 <- ifelse(cancer_id2=='Lymph.CLL.',1,0)
M <- list(as.matrix(data),
as.matrix(other))
cov <- list(as.matrix(rbind(cancer_id,rnorm(ncol(data)))),
as.matrix(rbind(cancer_id2,rnorm(ncol(other)))))
lymph <- list(M=M,cov=cov)
str(lymph)
usethis::use_data(lung)
usethis::use_data(lymph)
library(MultiStudyNMF)
data(lung)
str(lung)
data(lymph)
str(lymph)
out$indics$discovery
out$indics$recovery
data <- read.csv('../../../Downloads/WGS_PCAWG_2018_02_09/WGS_PCAWG.96.csv')
data(cosmic)
rownames(data) <- paste0(substr(data$Trinucleotide,0,1),'[',
data$Mutation.type,']',
substr(data$Trinucleotide,3,3))
data <- data[cosmic$Type,]
other <- read.csv('../../../Downloads/WGS_Other_2018_04_13/WGS_Other.96.csv')
rownames(other) <- paste0(substr(other$Trinucleotide,0,1),'[',
other$Mutation.type,']',
substr(other$Trinucleotide,3,3))
other <- other[cosmic$Type,]
# Subset to the two cancers of interest
cancer_id <- substr(colnames(data),0,10)
names(cancer_id) <- colnames(data)
cancer_id2 <- substr(colnames(other),0,10)
names(cancer_id2) <- colnames(other)
data <- data[,cancer_id%in%c('Lymph.BNHL','Lymph.CLL.')]
cancer_id <- cancer_id[colnames(data)]
other <- other[,cancer_id2%in%c('Lymph.BNHL','Lymph.CLL.')]
cancer_id2 <- cancer_id2[colnames(other)]
# For the purposes of the vignette, randomly subsample both to a smaller size
set.seed(31623)
subsamp1 <- sample(1:ncol(data),40,replace=F)
data <- data[,subsamp1]
cancer_id <- cancer_id[subsamp1]
names(cancer_id) <- NULL
subsamp2 <- sample(which(cancer_id2=='Lymph.CLL.'),30,replace=F)
other <- other[,c(which(cancer_id2=='Lymph.BNHL'),subsamp2)]
cancer_id2 <- cancer_id2[c(which(cancer_id2=='Lymph.BNHL'),subsamp2)]
names(cancer_id2) <- NULL
# Set up final data and covariates input
cancer_id <- ifelse(cancer_id=='Lymph.CLL.',1,0)
cancer_id2 <- ifelse(cancer_id2=='Lymph.CLL.',1,0)
M <- list(as.matrix(data),
as.matrix(other))
cov <- list(as.matrix(cancer_id),
as.matrix(cancer_id2))
str(M)
str(cov)
cov <- list(matrix(cancer_id,dims=c(1,40)),
matrix(cancer_id2,dims=c(1,40)))
cov <- list(matrix(cancer_id,nrow=1),
matrix(cancer_id2,nrow=1))
str(cov)
cov
lymph <- list(M=M,cov=cov)
str(lymph)
usethis::use_data(lymph)
usethis::use_data(lymph,overwrite=T)
library(MultiStudyNMF)
data(lung)
str(lung)
data(lymph)
str(lymph)
data(lung)
str(lung$M)
data(lung)
dim(lung$M[[1]])
dim(lung$M[[2]])
data(lung)
dim(lung$M[[1]])
dim(lung$M[[2]])
out2$A
head(out2$P)
str(out2$E)
out2$E[[1]]
out2$E$study2
?discovery_fit
?label_A
label_A(out2$A,out2$P)
proportion_A(out2)
set.seed(62524)
out2 <- recovery_discovery_fit(lung$M)
str(out2)
out <- out2
data(lung)
M <- lung$M
str(M)
out$A$discovery
out$A$recovery
head(out$P)
head(out$P$discovery)
head(out$P$recovery)
out$E$discovery$study1
out$E$discovery$study2
out$E$recovery$study1
out$E$recovery$study2
str(out$E)
?recovery_discovery_fit
label_A(out$A$discovery,out$P$discovery)
label_A(out$A$recovery,out$P$recovery)
propA <- proportion_A(out,thresh=0.05,label=T)
propA
propA[,sapply(1:ncol(propA),function(x) max(propA[,x])>0.05)]
str(out)
propA[,sapply(1:ncol(propA),function(x) max(propA[,x])>0.05)]
data(lymph)
M <- lymph$M
cov <- lymph$cov
data(lymph)
M <- lymph$M
cov <- lymph$cov
str(M)
str(cov)
set.seed(62524)
out <- discovery_cov_fit(M,cov)
out$A
out$indics
cov[[2]]
out$coefs
exp(-3.004448)
label_A(out$A,out$P)
proportion_A(out,thresh=0.05,label=T)
out$indics
out$coefs
proportion_A(out,thresh=0.05,label=T)
out$A
out$indics
out$coefs
?discovery_cov_fit
label_A(out$A,out$P)
proportion_A(out,thresh=0.05,label=T)
usethis::use_vignette("recovery_discovery_covariates")
data(lymph)
M <- lymph$M
cov <- lymph$cov
str(M)
str(cov)
set.seed(62524)
out <- recovery_discovery_cov_fit(M,cov)
out$A$discovery
out$A$recovery
out$indics$discovery
out$indics$recovery
out$coefs$discovery
out$coefs$recovery
?recovery_discovery_cov_fit
str(out)
label_A(out$A$discovery,out$P$discovery)
label_A(out$A$recovery,out$P$recovery)
propA <- proportion_A(out,thresh=0.05,label=T)
propA
propA[,sapply(1:ncol(propA),function(x) max(propA[,x])>0.05)]
out
str(out)
out$A$discovery
out$A$discovery <- out$A$discovery[,c(2,3,5)]
out$A$discovery
out$E$discovery$study2[,1:5]
out$E$discovery$study2 <- 0
head(out$P$discovery)
out$P$discovery <- out$P$discovery[,c(2,3,5)]
str(out)
label_A(out$A$discovery,out$P$discovery)
proportion_A(out)
out$A$discovery <- 0
out$E$discovery$study1 <- 0
proportion_A(out)
library(MultiStudyNMF)
data(lung)
M <- lung$M
str(M)
data(lymph)
M <- lymph$M
cov <- lymph$cov
str(M)
str(cov)
?discovery_fit
?recovery_discovery_fit
?discovery_cov_Fit
?discovery_cov_fit
devtools::document()
rm(list=c('proportion_A'))
devtools::document()
library(MultiStudyNMF)
?discovery_cov_fit
?recovery_discovery_cov_fit
data(cosmic)
data('cosmic')
cosmic
rm(cosmic)
data('cosmic')
head(cosmic)
devtools::document()
library(MultiStudyNMF)
?recovery_discovery_fit
?recovery_discovery_cov_fit
prop_A
propA
library(MultiStudyNMF)
